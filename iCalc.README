
Sample output from non-interactive calculation:

	>java -jar iCalc.jar "2*2"
	4.0
	
	>java -jar iCalc.jar "sin(pi/4)"
	0.7071067811865475
	
	> java -jar iCalc.jar "tan(pi/4)"
	0.9999999999999999

Note: the accuracy is not 100%, it should be 1 or 1.0, of course, but 0.9999 conitinuous is by definition 1 anyway:
		1/9 = 0.11111 continuous
		9*(1/9) = 1
	
3/Nov/2023 17:57	>java -jar iCalc.jar "tan(pi/2)"
	1.633123935319537E16

Note: the accuracy is not 100%, it should be a representation of  +/-inifinite, or like:

	>java -jar iCalc.jar "1/0"
	<undefined>

	C:\etc>java -jar iCalc.jar "sqrt(-1)"
	6.123233995736766E-17i-1.0 (1.0,-1.5707963267948966r)

Note: the accuracy is not 100%, it should be "0i-1"

Sample output from interactive shell (start with java -jar iCalc.jar):

	iCalc 0.01-0.1 (c)1998-2012 by Olaf Leimann

	iCalc>?
	ECHO: Toggle showing of calculations
	DEG: Switch to degree representation in polar notation of complex numbers.
	RAD: Switch to radian representation in polar notation of complex numbers.
	LIST: Show the currently defined variables and constants.
	CLEAR: Clear the currently user-defined variables.
	?: Show this list of commands.

	iCalc>pi
	3.141592653589793

	iCalc>e
	2.718281828459045

	iCalc>list
	const PI=3.141592653589793
	const E=2.718281828459045
	const I=0.0i1.0 (1.0,1.5707963267948966r)
